{"version":3,"sources":["components/Loading.js","hooks/usePosition.js","components/searcher/Searcher.js","hooks/useForm.js","WeatherApp.js","hooks/useFetch.js","index.js"],"names":["Loading","className","require","useEffect","useState","Searcher","seturl","initialState","formValue","setValue","target","name","value","useForm","search","handleOnChange","reset","onSubmit","e","preventDefault","type","onChange","autoComplete","placeholder","WeatherApp","latitude","longitude","coords","setCoords","navigator","geolocation","getCurrentPosition","position","console","log","enableHighAccuracy","usePosition","url","data","loading","error","state","setstate","Axios","get","then","resp","statusText","useFetch","weather","main","sys","wind","visibility","country","Math","round","temp","description","width","src","icon","alt","feels_like","pressure","humidity","speed","toString","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb6e53b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className='bg-black h-screen flex justify-center items-center'>\r\n            <i className='fas fa-cloud text-white text-8xl animate-bounce'></i>\r\n        </div>\r\n    );\r\n};\r\n","const { useEffect, useState } = require('react');\r\n\r\nexport const usePosition = () => {\r\n    const [coords, setCoords] = useState({\r\n        latitude: 46,\r\n        longitude: 78,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const success = (position) => {\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n\r\n            setCoords({\r\n                latitude,\r\n                longitude,\r\n            });\r\n        };\r\n\r\n        function error() {\r\n            console.log('you can activate tracking');\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(success, error, {\r\n            enableHighAccuracy: true,\r\n        });\r\n    }, [coords.latitude, coords.longitude]);\r\n\r\n    return {\r\n        latitude: coords.latitude,\r\n        longitude: coords.longitude,\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const Searcher = ({ seturl }) => {\r\n    const [{ search }, handleOnChange, reset] = useForm({\r\n        search: '',\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        seturl(\r\n            `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=40417ac8bbdde73fc8fe4dc13d601662`\r\n        );\r\n\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={handleSubmit}\r\n                className='w-50 h-7 md:w-72 md:h-8 outline-none'\r\n            >\r\n                <input\r\n                    className='shadow-lg text-green rounded-3xl w-full h-full outline-none text-center'\r\n                    type='search'\r\n                    name='search'\r\n                    onChange={handleOnChange}\r\n                    value={search}\r\n                    autoComplete='off'\r\n                    placeholder='Enter your city'\r\n                ></input>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [formValue, setValue] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValue(initialState);\r\n    };\r\n\r\n    const handleOnChange = ({ target }) => {\r\n        setValue({\r\n            ...formValue,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [formValue, handleOnChange, reset];\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Loading } from './components/Loading';\r\nimport { usePosition } from './hooks/usePosition';\r\nimport { useFetch } from './hooks/useFetch';\r\nimport { Searcher } from './components/searcher/Searcher';\r\n\r\nexport const WeatherApp = () => {\r\n    const { latitude, longitude } = usePosition();\r\n\r\n    const [url, seturl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        seturl(\r\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=40417ac8bbdde73fc8fe4dc13d601662`\r\n        );\r\n    }, [latitude, longitude]);\r\n\r\n    const { data, loading } = useFetch(url);\r\n\r\n    const { weather, main, name, sys, wind, visibility } = data || '';\r\n\r\n    if (loading) return <Loading />;\r\n\r\n    return (\r\n        <div className='flex flex-col justify-center items-center h-screen bg-gradient-to-br from-blue-700 via-blue-400 to-grey-400'>\r\n            <Searcher seturl={seturl} />\r\n\r\n            <div className='w-10/12 mt-10 h-3/5 h-200 shadow-xl bg-white sm:w-5/12 rounded-2xl p-2 bg-opacity-20 blur-50 relative text-gray-700 bg-clip-padding'>\r\n                <header className='w-12/12 border-b border-gray-700 border-opacity-30 mt-0 text-center'>\r\n                    <h2>\r\n                        {name}-{sys.country}\r\n                    </h2>\r\n                </header>\r\n\r\n                <main className='flex mt-5 text-center flex-col md:items-center md:flex-row md:justify-evenly md:w-full sm:'>\r\n                    <span className='text-8xl md:text-9xl'>\r\n                        {Math.round(main.temp)}°\r\n                    </span>\r\n\r\n                    <div className='flex flex-col justify-center text-2xl md:text-3xl'>\r\n                        <p className='flex flex-row justify-center items-center'>\r\n                            {weather[0].description}\r\n                            <img\r\n                                width='50px'\r\n                                src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n                                alt='icon'\r\n                            />\r\n                        </p>\r\n\r\n                        <p>feels like {Math.round(main.feels_like)}°</p>\r\n                    </div>\r\n                </main>\r\n\r\n                <ul className='text-center text-sm sm:text-xl h-28 absolute w-full left-0 bottom-0 rounded-2xl flex flex-row justify-between sm:h-32'>\r\n                    <li className='flex flex-col border-opacity-30  border-r-2 border-gray-400 w-3/12'>\r\n                        <span className='h-2/5'>Pressure</span>\r\n                        <span className='h-3/5'>{main.pressure}</span>\r\n                    </li>\r\n\r\n                    <li className='flex flex-col border-opacity-30  justify-evenly border-gray-400 border-r-2 w-3/12'>\r\n                        <span className='h-2/5'>Humidity</span>\r\n                        <span className='h-3/5'>{main.humidity}%</span>\r\n                    </li>\r\n\r\n                    <li className='flex flex-col border-opacity-30  justify-evenly border-gray-400 border-r-2 w-3/12'>\r\n                        <span className='h-2/5 font-xs'>Wind</span>\r\n                        <span className='h-3/5'>{wind.speed}km/h</span>\r\n                    </li>\r\n\r\n                    <li className='flex border-opacity-30  flex-col justify-evenly w-3/12'>\r\n                        <span className='h-2/5'>Visibility</span>\r\n                        <span className='h-3/5'>\r\n                            {visibility.toString().slice(0, -2)}%\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const useFetch = (url, options = {}) => {\r\n    const [state, setstate] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            Axios.get(url).then((resp) => {\r\n                if (resp.statusText === 'OK') {\r\n                    setstate({\r\n                        error: null,\r\n                        data: resp.data,\r\n                        loading: false,\r\n                    });\r\n                } else {\r\n                    console.log('object');\r\n                }\r\n            });\r\n        }\r\n    }, [url]);\r\n\r\n    return state;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WeatherApp } from './WeatherApp';\nimport './assets/main.css';\n\nReactDOM.render(<WeatherApp />, document.getElementById('root'));\n"],"sourceRoot":""}